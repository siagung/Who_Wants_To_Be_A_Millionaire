#BlueJ class context
comment0.params=
comment0.target=RandomGenerator()
comment0.text=\r\n\ The\ RandomGenerator\ Constructor\r\n
comment1.params=numOfWords\ length
comment1.target=java.util.ArrayList\ wordGen(int,\ int)
comment1.text=\r\n\ This\ method\ generates\ the\ specified\ number\ of\ random\ words\ of\ the\ specified\ length.\r\n\ \r\n\ @param\ numOfWords\ \ \ \ Number\ of\ random\ words\ to\ be\ Generated\r\n\ @param\ length\ \ \ \ \ \ \ \ Length\ of\ each\ random\ word\ Generated\r\n\ \r\n\ @return\ words\ \ \ \ \ \ \ \ ArrayList\ <String>\ containing\ all\ the\ random\ words\ generated\r\n
comment2.params=numOfWords\ length\ notSame
comment2.target=java.util.ArrayList\ wordGen(int,\ int,\ boolean)
comment2.text=\r\n\ This\ method\ generates\ the\ specified\ number\ of\ random\ words\ of\ the\ specified\ length.\ Allows\ you\ to\ specify\ if\ two\ words\ can\ be\ same\ or\ not.\r\n\ \r\n\ @param\ numOfWords\ \ \ \ Number\ of\ random\ words\ to\ be\ Generated\r\n\ @param\ length\ \ \ \ \ \ \ \ Length\ of\ each\ random\ word\ Generated\r\n\ @param\ notSame\ \ \ \ \ \ \ If\ true,\ two\ random\ words\ will\ not\ be\ the\ same.\ If\ false,\ two\ random\ words\ can\ be\ the\ same\r\n\ \r\n\ @return\ words\ \ \ \ \ \ \ \ ArrayList\ <String>\ containing\ all\ the\ random\ words\ generated\r\n
comment3.params=min\ max\ num
comment3.target=java.util.ArrayList\ numGen(int,\ int,\ int)
comment3.text=\r\n\ This\ method\ generates\ the\ specified\ number\ of\ integers\ between\ the\ values\ (min-max\ inclusive)\ specified.\ Numbers\ can\ be\ repeated.\r\n\ \r\n\ @param\ min\ \ \ \ \ \ \ \ \ \ \ The\ smallest\ number\ that\ can\ be\ generated\r\n\ @param\ max\ \ \ \ \ \ \ \ \ \ \ The\ largest\ number\ that\ can\ be\ generated\r\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ The\ number\ of\ integers\ to\ be\ generated\r\n\ \r\n\ @return\ numbers\ \ \ \ \ \ ArrayList\ <Integer>\ containg\ all\ the\ random\ numbers\ generated\r\n
comment4.params=min\ max\ num\ noRepeat
comment4.target=java.util.ArrayList\ numGen(int,\ int,\ int,\ boolean)
comment4.text=\r\n\ This\ method\ generates\ the\ specified\ number\ of\ integers\ between\ the\ values\ (min-max\ inclusive)\ specified.\ You\ can\ specify\ if\r\n\ two\ numbers\ can\ be\ the\ same\ or\ not\r\n\ \r\n\ @param\ min\ \ \ \ \ \ \ \ \ \ \ The\ smallest\ number\ that\ can\ be\ generated\r\n\ @param\ max\ \ \ \ \ \ \ \ \ \ \ The\ largest\ number\ that\ can\ be\ generated\r\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ The\ number\ of\ integers\ to\ be\ generated\r\n\ @param\ noRepeat\ \ \ \ \ \ If\ true,\ no\ two\ random\ numbers\ generated\ can\ be\ the\ same.\ If\ false,\ two\ numbers\ generated\ can\ be\ the\ same.\r\n\ \r\n\ @return\ numbers\ \ \ \ \ \ ArrayList\ <Integer>\ containg\ all\ the\ random\ numbers\ generated\r\n
comment5.params=min\ max\ num\ noRepeat\ sort
comment5.target=java.util.ArrayList\ numGen(int,\ int,\ int,\ boolean,\ boolean)
comment5.text=\r\n\ This\ method\ generates\ the\ specified\ number\ of\ integers\ between\ the\ values\ (min-max\ inclusive)\ specified.\ You\ can\ specify\ if\r\n\ two\ numbers\ can\ be\ the\ same\ or\ not.\ You\ can\ also\ specifiy\ if\ you\ would\ like\ the\ ArrayList\ to\ be\ sorted.\r\n\ \r\n\ @param\ min\ \ \ \ \ \ \ \ \ \ \ The\ smallest\ number\ that\ can\ be\ generated\r\n\ @param\ max\ \ \ \ \ \ \ \ \ \ \ The\ largest\ number\ that\ can\ be\ generated\r\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ The\ number\ of\ integers\ to\ be\ generated\r\n\ @param\ noRepeat\ \ \ \ \ \ If\ true,\ no\ two\ random\ numbers\ generated\ can\ be\ the\ same.\ If\ false,\ two\ numbers\ generated\ can\ be\ the\ same.\r\n\ @param\ sort\ \ \ \ \ \ \ \ \ \ If\ true,\ the\ ArrayList\ is\ sorted\ after\ all\ the\ numbers\ have\ been\ generated.\ If\ false,\ the\ ArrayList\ is\ not\ sorted.\r\n\ \r\n\ @return\ numbers\ \ \ \ \ \ ArrayList\ <Integer>\ containg\ all\ the\ random\ numbers\ generated\r\n
comment6.params=min\ max\ num\ noRepeat\ sort\ good\ bad
comment6.target=java.util.ArrayList\ numGen(int,\ int,\ int,\ boolean,\ boolean,\ java.lang.String[],\ java.lang.String)
comment6.text=\r\n\ This\ method\ generates\ the\ specified\ number\ of\ integers\ between\ the\ values\ (min-max\ inclusive)\ specified.\ You\ can\ \r\n\ specify\ if\ two\ numbers\ can\ be\ the\ same\ or\ not.\ You\ can\ also\ specifiy\ if\ you\ would\ like\ the\ ArrayList\ to\ be\ sorted.\r\n\ You\ can\ also\ provide\ an\ Array\ containing\ good\ numbers\ to\ be\ included\ in\ the\ ArrayList\ and\ bad\ numbers\ to\ be\ avoided\ \r\n\ so\ they\ are\ not\ in\ the\ ArrayList\r\n\ \r\n\ @param\ min\ \ \ \ \ \ \ \ \ \ \ The\ smallest\ number\ that\ can\ be\ generated\r\n\ @param\ max\ \ \ \ \ \ \ \ \ \ \ The\ largest\ number\ that\ can\ be\ generated\r\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ The\ number\ of\ integers\ to\ be\ generated\r\n\ @param\ noRepeat\ \ \ \ \ \ If\ true,\ no\ two\ random\ numbers\ generated\ can\ be\ the\ same.\ If\ false,\ two\ numbers\ generated\ can\ be\ the\ same.\r\n\ @param\ sort\ \ \ \ \ \ \ \ \ \ If\ true,\ the\ ArrayList\ is\ sorted\ after\ all\ the\ numbers\ have\ been\ generated.\ If\ false,\ the\ ArrayList\ is\ not\ sorted.\r\n\ @param\ good\ \ \ \ \ \ \ \ \ \ An\ Array\ storing\ the\ good\ numbers\ as\ a\ String\ to\ be\ included\ in\ the\ ArrayList.\ Empty\ spots\ in\ Array\ should\ be\ null.\r\n\ @param\ bad\ \ \ \ \ \ \ \ \ \ \ An\ Array\ storing\ the\ bad\ numbers\ as\ a\ String\ to\ be\ excluded\ from\ the\ ArrayList.\ Empty\ spots\ in\ Array\ should\ be\ null.\r\n\ \r\n\ @return\ numbers\ \ \ \ \ \ ArrayList\ <Integer>\ containg\ all\ the\ random\ numbers\ generated\r\n
comment7.params=toBeSorted
comment7.target=java.util.ArrayList\ sort(java.util.ArrayList)
comment7.text=\r\n\ This\ method\ is\ used\ to\ Sort\ an\ ArrayList\ in\ ascending\ order.\r\n\ \r\n\ @param\ toBeSorted\ \ \ \ \ \ \ \ \ \ \ \ ArrayList\ to\ be\ sorted\r\n\ \r\n\ @return\ toBeSorted\ \ \ \ \ \ \ \ \ \ \ Returns\ the\ sorted\ ArrayList\r\n
comment8.params=tempArray
comment8.target=java.util.ArrayList\ converter(java.lang.String[])
comment8.text=\r\n\ This\ method\ is\ used\ by\ the\ numGen\ class\ to\ convert\ the\ string\ Array\ containg\ numbers\ to\ an\ Integer\ ArrayList.\r\n\ \r\n\ @param\ tempArray\ []\ \ \ \ \ \ \ \ \ \ String\ containing\ Integers\ as\ String\ to\ be\ converted\r\n\ \r\n\ @return\ temp\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Returns\ an\ ArrayList<Integer>\ containging\ the\ Integers\ from\ the\ String\ Array\r\n
numComments=9
